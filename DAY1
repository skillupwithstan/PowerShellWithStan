PowerShell - .NET framework

Editor - PowerShell ISE, Visual Studio Code

PowerShell ISE - Integrated Scripting Environment

Version Check - $PSVersionTable

ISE Execution
--------------

F5 - Full execution
F8 - Selected Lines
F9 - Set Breakpoint
F10/F11 - Line By Line Execution

Automation Checklist
--------------------
Dev/UAT Server
Admin access
Service Account

1. Time Savings
2. Avoid Human errors
3. Standardization

Storage, Backup, Database, Monitoring, Cloud, etc.,

 
Object oriented - Powershell

text based - python



Car - object 

properties - model no, no. of tyres, color
methods/functions - start, stop, break

namespace
{
	class Car
	{
		void Functions()
		{
			properties
		}
	}

	class Table
	{
		Functions()
		{
			properties
		}
	}

}

void --> doesn't return any value


class Maths
{
    Addition(a,b)
    {
	int c;
	c = a + b
	return c  # print c = 30
    }

    Substraction()
    {
	int c;
	c = 10 - 5
	return c  # print c = 5
    }
}

result = Maths.Addition(10,20)


object oriented
we can use for windows/linux/mac OS
Case incensitive

CICD - continious Integration and continious deployment

Configuration management - Ansible, Puppet, Chef, Salt stack 
Orchestration tools - vRO, SCORCH, HPOO, BAO, etc., 

Automation Levels
==================
1. Semi automated solution
2. Fully automated solution

Scripting ==> Syntax + Logic 
